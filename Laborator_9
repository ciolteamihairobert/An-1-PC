#include <stdio.h>
#include <stdlib.h>
int i,j;
void linie_orizontala(int n)
{

    for(i=0;i<n;i++)
        {printf("*");}
    printf("\n");
}
void linie_orizontala_cu_spatii(int n)
{ for(j=0;j<(n-3)/2;j++) {
   for(i=0;i<n;i++){
        if(i==0||i==n-1)
        {
            printf("*");
        }
        else
        {
            printf(" ");
        }
        }
        printf("\n");
        }
}
float maxim_3_numere_float(float a,float b,float c)
{
    if (a>b&&a>c)
    {
        return a;
        }
    else
    {
        if (b>a&&b>c)
        {
                return b;
        }
        else
        {
            return c;
        }
    }
}
void sortat_crescator_2_valori(int *a,int *b)
{
    if(*a>*b)
    {
        printf("%d",*b);
        printf("\n");
        printf("%d",*a);
    }
    else
    {
        printf("%d",*a);
        printf("\n");
        printf("%d",*b);
    }
}
void citire(int v[],int n)
{
    for(i=0;i<n;i++){
        scanf("%d",&v[i]);}
}
int egal(int v1[],int v2[],int n)
{int ok=1;
    for(i=0;i<n;i++)
    {
        if(v1[i]!=v2[i])
            {ok=0;}
    }
    return ok;
}
int cmmdc(int a,int b)
{
    if(a==b){
        return a;}
    else
        {if(a>b){
          return cmmdc(a-b,b);
        }
        else
        {
            return cmmdc(a,b-a);
        }
        }
}
int Ackermann(int a,int b)
{
    if(a==0)
    {
     return (b+1);
    }
    else
    {
        if(a>0&&b==0)
        {
            return Ackermann(a-1,1);
        }
        else
        {
            if(a>0&&b>0)
            {
                return Ackermann(a-1,Ackermann(a,b-1));
            }
        }
    }
}
int main()
{//9.1
int n;
scanf("%d",&n);
linie_orizontala(n);
linie_orizontala_cu_spatii(n);
linie_orizontala(n);
linie_orizontala_cu_spatii(n);
linie_orizontala(n);
//9.2
float x,y,z;
scanf("%g%g%g",&x,&y,&z);
printf("%g",maxim_3_numere_float(x,y,z));
//9.3
int a,b;
scanf("%d%d",&a,&b);
sortat_crescator_2_valori(&a,&b);
//9.4
int n1,v1[10],v2[10];
scanf("%d",&n1);
citire(v1,n1);
citire(v2,n1);
if(egal(v1,v2,n1)==1){
    printf("elemente egale");}
else{
    printf("elemente distincte");
}
//9.6
int p,q;
scanf("%d%d",&p,&q);
printf("%d",cmmdc(p,q));
//9.8
/*int a1,b1;
scanf("%d%d",&a1,&b1);
printf("%d",Ackermann(a1,b1));
*/

        return 0;
}
